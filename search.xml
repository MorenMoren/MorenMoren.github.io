<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>学生管理系统（持续更新）</title>
    <url>/2020/04/08/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
    <content><![CDATA[<p>​    最近一直在学习C++，就想着用C++语言自己做一个程序，就先从最简单的开始吧——学生管理系统（随着我的能力提高会逐步完善该程序）</p>
<p><strong>大致思路</strong>（<strong>利用思维导图给出</strong>）：</p>
<p><img src="http://q86xw0tu1.bkt.clouddn.com/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B01.png" alt="大致思路"></p>
<p><em>源码如下：</em></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Stu_data</span> &#123;</span></span><br><span class="line">	<span class="built_in">string</span> name;</span><br><span class="line">	<span class="built_in">string</span> sex;</span><br><span class="line">	<span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">&#125;Data;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Data data;</span><br><span class="line">	Student* next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Linklist</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	Student* head;</span><br><span class="line">	Student* rear;      <span class="comment">//作为末节点</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	Linklist();</span><br><span class="line">	~Linklist();</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">Createlist</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Attach</span><span class="params">(<span class="built_in">string</span> name,<span class="built_in">string</span> sex,<span class="keyword">int</span> num,Student**rear)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Showlist</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">		利用函数的重载来对不同类型的输入对象，选择如何进行检索，</span></span><br><span class="line"><span class="comment">		同时将该函数类型定义为Student*，在找到所要找的对象时，返</span></span><br><span class="line"><span class="comment">		回其所在链表的位置P。</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"></span><br><span class="line">	<span class="function">Student* <span class="title">Searchlist</span><span class="params">(<span class="built_in">string</span> name)</span></span>;</span><br><span class="line">	<span class="function">Student* <span class="title">Searchlist</span><span class="params">(<span class="keyword">int</span> num)</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Deletedata</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">Changelist</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">string</span> name;</span><br><span class="line">	Linklist L;</span><br><span class="line">	L.Createlist();</span><br><span class="line">	L.Showlist();</span><br><span class="line">	L.Deletedata();</span><br><span class="line">	L.Showlist();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Linklist::Linklist() &#123;</span><br><span class="line">	n = <span class="number">0</span>;</span><br><span class="line">	head = <span class="keyword">new</span> Student;</span><br><span class="line">	head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	rear = head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Linklist::~Linklist() &#123;</span><br><span class="line">	<span class="keyword">delete</span> head;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Linklist::Createlist</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">string</span> name, sex;</span><br><span class="line">	<span class="keyword">int</span> num;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"请按以下格式输入信息:"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"学号，姓名，性别"</span> &lt;&lt;<span class="built_in">endl</span> ;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt; num &amp;&amp; num!=<span class="number">-1</span>) &#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; name &gt;&gt; sex;</span><br><span class="line">		Attach(name, sex, num, &amp;rear);</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> i;       <span class="comment">//返回有多少个节点（即有多少个人），暂时不需要</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//该Attach函数是在链表尾部添加新节点，并且rear始终作为链表末节点</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Linklist::Attach</span><span class="params">(<span class="built_in">string</span> name, <span class="built_in">string</span> sex, <span class="keyword">int</span> num,Student**rear)</span> </span>&#123;</span><br><span class="line">	Student* P;</span><br><span class="line">	P = <span class="keyword">new</span> Student;</span><br><span class="line">	P-&gt;data.name = name;</span><br><span class="line">	P-&gt;data.sex = sex;</span><br><span class="line">	P-&gt;data.num = num;</span><br><span class="line">	P-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	(*rear)-&gt;next = P;</span><br><span class="line">	(*rear) = P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Linklist::Showlist</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Student* P;</span><br><span class="line">	P = head;</span><br><span class="line">	<span class="keyword">while</span> (P-&gt;next) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"姓名:"</span> &lt;&lt; P-&gt;next-&gt;data.name</span><br><span class="line">			 &lt;&lt; <span class="string">" 性别："</span> &lt;&lt; P-&gt;next-&gt;data.sex</span><br><span class="line">			 &lt;&lt; <span class="string">" 学号:"</span> &lt;&lt; P-&gt;next-&gt;data.num &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		P = P-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Student* <span class="title">Linklist::Searchlist</span><span class="params">(<span class="built_in">string</span> name)</span> </span>&#123;</span><br><span class="line">	Student* P;</span><br><span class="line">	P = head;</span><br><span class="line">		<span class="keyword">while</span> (P-&gt;next) &#123;</span><br><span class="line">			<span class="keyword">if</span> (P-&gt;next-&gt;data.name == name) &#123;</span><br><span class="line">				<span class="keyword">return</span> P;</span><br><span class="line">			&#125;</span><br><span class="line">			P = P-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"未能找到相关信息"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Student* <span class="title">Linklist::Searchlist</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">	Student* P;</span><br><span class="line">	P = head;</span><br><span class="line">		<span class="keyword">while</span> (P-&gt;next) &#123;</span><br><span class="line">			<span class="keyword">if</span> (P-&gt;next-&gt;data.num == num) &#123;</span><br><span class="line">				<span class="keyword">return</span> P;</span><br><span class="line">			&#125;</span><br><span class="line">			P = P-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"未能找到相关信息"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Linklist::Deletedata</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">string</span> name,choice;</span><br><span class="line">	<span class="keyword">int</span> num;</span><br><span class="line">	Student* P=<span class="keyword">new</span> Student;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"你要以何种方式（num/name）删除信息："</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; choice;</span><br><span class="line">	<span class="keyword">if</span> (choice == <span class="string">"num"</span>) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"你要删除哪个学号信息："</span>;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">		P = Searchlist(num);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (choice == <span class="string">"name"</span>) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"你要删除哪个学生信息："</span>;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">		P = Searchlist(name);</span><br><span class="line">	&#125;</span><br><span class="line">	Student* T=<span class="keyword">new</span> Student;</span><br><span class="line">	T = P-&gt;next-&gt;next;</span><br><span class="line">	<span class="keyword">delete</span> P-&gt;next;</span><br><span class="line">	P-&gt;next = T;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Linklist::Changelist</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">string</span> name, choice;</span><br><span class="line">	<span class="keyword">int</span> num;</span><br><span class="line">	Student* P = <span class="keyword">new</span> Student;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"你要以何种方式（num/name）修改信息："</span>;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; choice;</span><br><span class="line">	<span class="keyword">if</span> (choice == <span class="string">"num"</span>) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"你要修改哪个学号信息："</span>;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">		P = Searchlist(num);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (choice == <span class="string">"name"</span>) &#123;</span><br><span class="line">		<span class="built_in">cout</span> &lt;&lt; <span class="string">"你要修改哪个学生信息："</span>;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; name;</span><br><span class="line">		P = Searchlist(name);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//结构中暂未添加保存成绩的数组，暂不具体做修改</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>2020.4.8：<strong>完成项</strong>：目前只完成链表的创建，链表指定节点的删除，链表节点信息的查找</p>
<p><strong>运用C++新学的知识</strong>：函数重载，类的定义，类的构造函数与析构函数。</p>
]]></content>
      <categories>
        <category>程序开发</category>
      </categories>
      <tags>
        <tag>C/C++语言</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云CentOS8.0服务器宝塔安装失败，提示（setuptools installation failed）</title>
    <url>/2020/04/03/%E9%98%BF%E9%87%8C%E4%BA%91CentOS8-0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5%EF%BC%8C%E6%8F%90%E7%A4%BA%EF%BC%88setuptools-installation-failed%EF%BC%89/</url>
    <content><![CDATA[<p>对于想要搭建一些个人网站的小伙伴们，苦于阿里云繁琐的设置界面无从下手，推荐一个简洁的控制面板：宝塔面板</p>
<p>推荐教程：[阿里云服务器安装宝塔面板图文教程]（<a href="https://developer.aliyun.com/ask/233242?spm=a2c6h.13524658）" target="_blank" rel="noopener">https://developer.aliyun.com/ask/233242?spm=a2c6h.13524658）</a></p>
<p>#我在安装宝塔服务器时，安装突然终止，然后给出</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setuptools installation failed</span><br></pre></td></tr></table></figure>
<p>#我想到的可能的解决办法：<br>1.重新初始化我的云盘<br>2.重装我的云服务器系统<br>###办法一：重新初始化我的云盘<br>1.关闭你的云服务器（一定要关，不然他不让你初始化）<br>2.点击本实例磁盘<br><img src="http://q86xw0tu1.bkt.clouddn.com/22548835-1b744f8ca09c6a6d.png" alt="进入初始化界面"><br>3.点击重新初始化，再安装一次宝塔面板即可<br><img src="http://q86xw0tu1.bkt.clouddn.com/22548835-43b129a4f77972ee.png" alt="云存储"><br>###办法二：重装我的云服务器系统<br>我是先完成的重新初始化磁盘，发现安装还是失败了，于是我想到了重装系统，成功安装了宝塔面板。我所使用的时CentOS 8.0系统,也就是阿里云服务器上centos的最新版本，我认为也许是新版并不兼容宝塔面板。下面是解决办法：</p>
<p>1.如上：关闭云服务器（不再做演示）</p>
<p>2.在实例详细页面，往下翻找到配置信息，点击更多，点击更换操作系统进入更改页面<br><img src="http://q86xw0tu1.bkt.clouddn.com/22548835-a5d0f9b89f3c0a24.png" alt=""></p>
<p><img src="http://q86xw0tu1.bkt.clouddn.com/22548835-dff63787afe67517.png" alt="更改页面"><br>3.在这里我们还是选择centos系统，但是我们将版本选择为7.5 64位（当然也可以选择其他版本，我没试过），然后再重新设置一下密码，远程连接需要用到。</p>
<p>4.点击确认更换，然后系统重装完成，再安装宝塔面板（我成功安装了）。</p>
<p>#####如果仍然没有解决问题，很抱歉耽搁你的时间了。。。。。。</p>
]]></content>
      <categories>
        <category>问题解决</category>
      </categories>
      <tags>
        <tag>网站搭建</tag>
        <tag>问题解决</tag>
      </tags>
  </entry>
  <entry>
    <title>算法学习笔记（一）：牛顿迭代法（计算平方根）</title>
    <url>/2020/04/11/%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p>​    在算法（第四版）的13页里，我看到了一个的函数，它利用了牛顿迭代法来计算一个数的近似平方根，我通过查询资料理解了牛顿迭代法的实现过程。</p>
<p>​    这个方法所包含的知识：</p>
<p><em>1.导数的含义</em></p>
<p><em>2.极限的思维</em></p>
<p><em>3.函数的零点</em></p>
<h4 id="牛顿迭代法"><a href="#牛顿迭代法" class="headerlink" title="牛顿迭代法"></a>牛顿迭代法</h4><p>1.在求一个函数零点时，我们可以随意取一个点作为起始点(x0,f(x0)），并过该点做函数的切线,设切线的横截距为x1。在该点（x1,0）垂直于X轴引垂线，交函数于(x1,f(x1)),再对该点做与之前同样的操作，以此往复。如下图：</p>
<p><img src="http://q86xw0tu1.bkt.clouddn.com/%E7%89%9B%E9%A1%BF%E8%BF%AD%E4%BB%A3%E6%B3%95%E5%9B%BE%E8%A7%A3.gif" alt="牛顿迭代法"></p>
<p>2.对所得到的数据进行处理,经过运算，第一条切线的横截距，多条切线横截距为:<br>$$<br>x_1=x_0+f(x_0)/f’(x_0)\<br>x_2=x_1+f(x_1)/f’(x_1)\<br>…….\<br>x_(n+1)=x_n+f(x_n)/f’(x_n)<br>$$</p>
<h4 id="利用牛顿迭代法来求一个数的平方根"><a href="#利用牛顿迭代法来求一个数的平方根" class="headerlink" title="利用牛顿迭代法来求一个数的平方根"></a>利用牛顿迭代法来求一个数的平方根</h4><p>1.假设：<br>$$<br>t=\sqrt[2]n\<br>则设f(x)=x^2-n\<br>可设x_0=n<br>$$<br>2.利用代码实现如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sqrt</span><span class="params">(<span class="keyword">double</span> n)</span></span>&#123;</span><br><span class="line">	<span class="keyword">double</span> t;</span><br><span class="line">	t=n;</span><br><span class="line">	<span class="keyword">while</span>(t-n/t&lt;=<span class="number">1e-15</span>*t)</span><br><span class="line">        <span class="comment">//这里跳出循环的条件是你所要求的精度，即1-n/t^2要满足一定精度。</span></span><br><span class="line">		t=(t+n/t);</span><br><span class="line">	<span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法（第四版）</category>
      </categories>
      <tags>
        <tag>算法学习</tag>
      </tags>
  </entry>
</search>
